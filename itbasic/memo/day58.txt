day58

컴퓨터와 운영체제 -> 가상머신 -> 가상화 소프트웨어 -> 오픈소스 라이선스 -> GNU -> 리눅스 -> 리눅스 시스템 구조 -> 리눅스 설치 

1. 컴퓨터와 운영체제 
1) 컴퓨터(Computer) 
	아주 빠른 계산기 
	이진법(0과 1)을 사용하여 데이터를 처리
	데이터를 처리하고 계산ㅇ르 수행할 수 있는 전자장치를 의미 
	
- 컴퓨터의 주요 구성 요소 
	CPU(Central Procession Unit) : 명령어를 처리하고 계산을 수행 
	RAM(Random Access Memory) : 데이터를 임시로 저장하는 메모리 
		컴퓨터가 실행중인 프로그램이나 데이터를 빠르게 읽고 쓸 수 있도록 도와줌 
	저장장치 : HDD, SSD(Solid State Driver) 장치 
		데이터를 영구적으로 저장함 
	입출력장치(I/O devices) : 마우스, 키보드, 모니터 
		컴퓨터와 사용자간의 상호작용을 가능하게 함 

2) 운영체제(OS, Operation System) 
	컴퓨터 하드웨어와 사용자 프로그램 사이에서 중재자 역할을 하는 소프트웨어  
	
- 운영체제 종류 
	Windows : 마이크로소프트 개발한 운영체제 
	MacOS	: 애플 개발한 운영체제, Macintoch 컴퓨터에서만 사용됨 
		안정성과 보안성이 뛰어남 
	리눅스(Linux)	: 오픈소스 운영체제, 서버와 개인용 컴퓨터에서 사용됨 
	Unix	: 고전적인 운영체제, 서버와 대형 컴퓨터에서 사용됨 

3) 컴퓨터와 운영체제의 관계
	하드웨어는 프로그램이 실행될 수 있도록 자원을 제공 
	운영체제는 하드웨어 자원을 관리하고 프로그램이 제대로 실행될 수 있게 시스템을 제어 
	
2. 가상머신(VM, Virtual Machine) 
	호스트 컴퓨터의 자원을 소프트웨어적으로 나누어 여러개의 가상 컴퓨터처럼 사용할 수 있게 해주는 기술 

1) 가상머신의 특징 
	독립성 : 각 가상머신은 독립적으로 운영체제와 어플리케이션을 실행
	하드웨어 가상화 : 가상머신은 호스트 시스템의 하드웨어 자원을 나누어 사용하며 각 가상머신은 
		자신만의 CPU, 메모리, 저장장치를 가상화된 형태로 할당받는다 
	자원효율성 : 물리적인 컴퓨터 한대로 여러 가상머신을 실행할 수 있기 때문에 
		자원을 효율적으로 사용 가능하다 
	격리성 : 호스트시스템과 격리된 환경에서 실행된다 
	
2) VMware Workstation Pro 
	가상머신을 관리하고 실행하는 데 필요한 가상화 소프트웨어 
	사용자는 하나의 물리적인 컴퓨터에서 여러개의 가상머신을 만들고 다양한 운영체제를 사용할 수 있다 

3. 가상화 소프트웨어(Virtualization Software) 
	하나의 물리적 컴퓨터에서 여러개의 가상컴퓨터(가상머신)를 실행할 수 있게 해주는 프로그램

1) 가상화 소프트웨어의 종류 
- VMware Workstation Pro 
	데스크탑 가상화 소프트웨어 
	스냅샷, 클로닝, 가상 네트워크 기능 등을 제공함 
	
- Oracle VirtualBox
	오라클사에서 만든 무료 오픈소스 가상화 소프트웨어 
	
- Microsoft Hyper-V 
	윈도우서버, windows 10 Pro 이상에서 사용할 수 있는 가상화 소프트웨어 
	서버환경에서 사용됨 
	
- KVM(Kernel-based Virtual Machine) 
	리눅스에서 사용할 수 있는 오픈소스 가상화 솔루션 
	리눅스 커널 내에서 가상화 기능을 제공하며 서버환경에서 많이 사용됨 

- Xen 
	오픈소스 가상화 플랫폼, 서버 가상화에 주로 사용됨 
	하이퍼바이저 기반 가상화 기술을 사용하므로 성능과 보안성이 뛰어남 
	
2) 가상화 소프트웨어의 장점 
	자원 효율성(자원을 나누어 사용)
	유연한 환경 관리(작업 환경 나누어 구성)
	격리된 작업 환경(해킹 테스트 유리, 장애 발생시 영향 최소화) 
	백업과 복원(파일 형태로 저장되므로 백업 및 복원 유리)

4. 오픝소스 라이선스 
	소프트웨어의 사용, 수정, 배포등에 대한 조건을 정의하는 법적 문서 
	소스코드가 공개되어있고 누구나 사용과 수정이 가능하지만 규칙이 정해져있다 
	
- BSD 라이선스 
	제한없이 자유롭게 사용할 수 있는 라이선스 
	코드 수정이나 재배포 시 소스코드를 공개할 의무가 없고 상업적으로도 자유롭게 사용 가능함 

- GPL(General Public License)
	자유 소프트웨어 정책에 따른 라이선스 
	상업적 이용 시 소스코드를 공개해야하는 조건이 있음 

- LGPL(Lesser General Public License)  
	모듈이나 라이브러리에만 적용됨 
	상업적 사용시 소스코드를 공개할 필요가 없으며
	라이브러리를 사용하는 어플리케이션의 소스코드를 공개할 필요 없음

- MIT 라이선스 
	가장 간단한 오픈소스 라이선스 
	사용자가 소스코드를 자유롭게 사용하고 수정, 배포가능함 
	저작권과 라이선스 정보만 표기하면 자유롭게 사용 가능하다 

- GNU(GNU Not UNIX) 
	자유 소프트웨어 재단이 제시하는 소프트웨어 개발 프로젝트 
	자유롭게 사용할 수 있는 운영체제를 목표로 함 
	
	리차드 스톨만 : GNU 프로젝트의 창립자 
	GPL : 자유소프트웨어 정책, 사용자는 자유롭게 사용 가능하나 수정 코드를 배포시 소스코드 공개의무 
	LGPL : 일부 제한적인 라이브러리나 모듀렝 적용되는 라이선스로 상업적 사용에 소스코드 공개의무 없음 
	
6. 리눅스 프로젝트 
	리누스 토발즈 : 개발자 1991년에 시작한 프로젝트 
	유닉스 기반의 운영체제로 오픈소스이며 누구나 사용할 수 있고 수정할 수 있는 자유 소프트웨어 
	리눅스 커널을 만든 개발자, 리눅스 프로젝트의 창립자 
	턱스(Tux) : 리눅스의 마스코트, 펭귄을 형상화한 캐릭터 
	
+) 리누스 토발즈, 리차드 스톨만 
- 리차드 스톨만 
	소프트웨어는 모두에게 자유롭게 공유되어야하며 소스코드 공개가 필수적 
	GNU 프로젝트 창립, GPL 라이선스 제정
	
- 리누스 토발즈 
	실용적인 개발을 지향하며 자유 소프트웨어보다 오픈소스 모델을 더 선호함 
	1991년 리눅스 커널 개발 시작 
	1992년 리눅스 커널이 GNU 프로젝트와 결합하여 강력한 오픈소스 운영체제로 발전 
	2005년 GIT 개발 -> 리눅스 커널 협업을 위해 만든 분산 버전 관리 시스템 

7. 리눅스(Linux) 
	유닉스(Unix) 기반의 오픈소스 운영체제 
	리누스 토발즈 1991년 개발 시작 
	
1) 리눅스의 특징 
	오픈소스 및 무료 
	안정성 및 보안성 
	커스터마이징 가능 
	다양한 배포판
	
2) 리눅스 시스템 구조 
	HW : 실제 물리적인 장치 
	Kernel(커널) : 운영체제의 핵심 부분, 시스템 자원 관리, 하드웨어와 소프트웨어 간의 상호작용을 담당 
	Shell(쉘) : 사용자의 명령을 해석하고 커널에 전달하는 프로그램 
		CLI(Commna Line Interface), GUI(Graphic User Interface)를 통해 시스템과 상호작용할 수 있다 
	User(사용자) : 운영체제와 상호작용하는 사람 
	
3) 커널(Kernel)
	운영체제의 핵심적인 부분, 하드웨어와 소프트웨어 간의 중재자 역할
- 커널의 주요 역할
	컴퓨터의 하드웨어 자원을 관리 
	프로세스 관리 
	파일시스템 관리 
	보안 및 접근제어 
	하드웨어와 소프트웨어 간의 추상화 

- 커널의 구성요소  
	프로세스 관리 : 프로세스간 컨텍스트 스위칭(Context Switching) 여러 프로그램이 동시에 실행되는 것처럼 보이게 함 
	메모리 관리 : 시스템 메모리를 효율적으로 관리하여 각 프로세스가 필요한 만큼 메모리를 할당
	파일 시스템 : 파일을 저장하고 읽는 작업 처리 
	입출력 관리 : 디바이스 드라이버는 하드웨어와 커널 사이의 중재 역할을 하며 커널은 다양한 장치와 소통 가능함 
	보안 및 접근 제어 : 사용자 인증과 권한 관리를 통해 시스템 보안을 관리함 

- 커널의 종류 
	모놀리식 커널 : 모든 커널기능이 하나의 큰 프로그램으로 구현된 커널 
	마이크로 커널 : 커널의 핵심 기능만 최소화하여 구현하고 나머지 기능은 커널 외부에서 실행되는 방식 

4) 쉘(Shell) 
	사용자가 운영체제와 상호작용할 수 있도록 해주는 명령어 인터페이스 
	쉘은 사용자가 시스템에 명령을 내리고 그 시스템이 명령을 실행하도록 커널에 전달하는 역할 

- 쉘의 역할 
	명령어 해석 
	프로세스 관리 
	스크립트 실행 
	환경설정 
	
- 쉘의 종류 
Bash(Bourne Again Shell) 
	가장 인기있는 기본 쉘 
	Bourne Shell(sh)을 기반으로 개발 
Zsh(Z shell) 
	Bash 더 많은 기능을 제공하는 쉘 
Csh(C shell) 
	C언어 문법을 기반으로 한 쉘 
	tcsh는 C쉘의 향상된 버전 
Fish(Friendly Interactive Shell) 
	사용자 친화적이고 사용자 경험을 중시하는 쉘 

+) 리눅스 운영체제 구조 
	사용자 응용프로그램(ex : 웹 브라우저, 미디어 플레이어 등) 
	쉘(Shell : 사용자와 커널을 연결하는 인터페이스) 
	커널(Kernel : 운영체제의 핵심, 하드웨어와 직접 연결) 
	하드웨어(HardWare : CPU, 메모리, 디스크, 네트워크 장치, 입출력 장치 등) 
 		
리눅스 종류
데비안, 레드햇, 슬랙웨어 
데비안 : kali, 우분투, mint
슬랙웨어 : suse, 젠투리눅스
레드햇 : 페도라, rocky linux, centOS

사용할 리눅스 : centOS, rocky Linux, kali, ubuntu 
vmware workstation pro 17.6.2

8. 리눅스 배포판 
1) 데스크톱 / 개인 사용자용 
	Ubuntu : 가장 인기있는 리눅스 배포판, 개발쪽에서 주로 많이 사용함 
	Linux Mint : 윈도우 사용자에게 친숙한 UI 
	Fedora : 최신 기술을 빠르게 적용하는 배포판 

2) 서버 및 기업용 
	CentOS/REHL(Red Hat Enterprise Linux) : 기업용에서 많이 사용됨 
	Debian : 안정성과 보안성이 뛰어난 배포판 
	SUSE Linux Enterprise Servered(SLES) : 기업용으로 최적화된 배포판 

3) 해킹/보안 테스트용 	
	Kali Linux : 해킹 및 보안 테스트(침투테스트, 포렌식 분석)용 
	Parrot OS : 프라이버시 보호와 보안 연구에 최적화 
	
4) 임베디드 및 IoT 
	Raspberry Pi OS : 라즈베리 파이 전용 리눅스 
	Yocto Project : 맞춤형 임베디드 OS 제작 가능 
	
9. Red Hat 계열 VS Debian 계열 VS 기타계열 
	리눅스 배포판은 커널을 기반으로 여러 패키지 관리 시스템과 환경을 추가하여 만들어진 운영체제

1) Red Hat 계열(Red Hat-Based) 
	RPM 패키지 시스템 사용(yum, dnf 사용) 
	기업 및 서버 환경에서 강력한 지원 
	Red Hat이 주도하는 배포판 
	배포판 : REHL, CentOS, Fedora, Rocky Linux 

2) Debian 계열(Debian-Based) 
	APT 패키지 시스템 사용(apt, apt-get) 
	서버 뿐만 아니라 데스크탑 환경에서도 많이 사용됨 
	커뮤니티 중심 지원 
	배포판 : Ubuntu, Mint
	
3) Arch Linux 계열(Arch-Based) 
	고급 사용자 및 개발자에게 적합한 배포판 
	최소한의 기본 시스템만 제공 -> 사용자가 직접 커스터마이징 
	Rolling Release 모델 -> 항상 최신 소프트웨어 제공 
	배포판 : Arch Linux, Mangjaro, EndeavourOS

4) Slackware 계열 
	가장 오래된 리눅스 배포판 중 하나(1993년) 
	단순하고 미니멀한 UNIX 스타일 운영체제 
	패키지 관리 시스템이 단순함(.tgz 패키지 사용, pkgtool 활용) 
	배포판 : slackware, Salix OS, Porteus 

5) SUSE 계열(SUSE-Based) 
	기업 환경에서 많이 사용되는 배포판 
	YaST 패키지 관리 시스템 사용 
	배포판 : openSUSE, SUSE Linux Enterprise(SLES) 

10. 리눅스 스토리지와 디렉토리 구조 
	스토리지(Storage0 : 데이터를 저장하는 장치 
	디렉터리 구조 : 리눅스 파일 시스템에서 데이터가 저장되는 방식과 경로를 의미함 

1) 스토리지 유형
- DAS(Direct Attached Storage, 직접 연결 스토리지) 
	서버와 저장장치 케이블로 직접 연결하는 방식 
	빠른 성능, 단일 서버에만 연결되어 확장성이 낮음, 서버를 옮기거나 다른 서버에서 접근이 어려움 
	ex) 외장하드, HDD, SSD, USB 등 

- NAS(Network Attached Storage, 네트워크 스토리지) 
	네트워크(LAN)을 통해 여러 사용자가 공유하는 저장소 
	파일 서버 역할(여러 사람이 동시에 접근 가능), 파일 공유 용이, 네트워크 속도에 따라 성능 제한 
	ex) 공유폴더, 기업용 파일서버, 클라우드 스토리지(구글 드라이브, Dropbox 등) 

- SAN(Storage Area Network, 스토리지 전용 네트워크) 
	스토리지만을 위한 고속 전용 네트워크
	DAS와 NAS의 단점을 보완, 대규모 환경에서 빠르고 안정적인 스토리지 공유, 데이터센터, 가상화환경, 대형기업 사용 
	ex) DB 서버 저장소, 가상화서버

- Local(로컬저장소) 
	내 pc 내부의 저장소 
	인터넷이나 네트워크 연결 없이 바로 사용가능, 오직 해당 장치에서만 접근 가능 
	ex) C드라이브, D드라이브 

- Domain(도메인) 
	네트워크 상에서 특정 그룹(영역)을 지정한 단위 
	기업환경에서 주로 사용, 도메인 속하면 사용자는 어디서든 같은 계정으로 로그인 가능, 
	네트워크 관리자가 중앙에서 여러 사용자와 시스템을 통합 관리 가능 
	ex) 회사 내 사내망 도메인 -> ID/PW 로그인하면 모든 pc 접근 가능 

2) 리눅스 디렉터리 구조 
	파일시스템 디렉터리(Tree 구조)로 구성됨 
	최상위 디렉터리는 / (루트, root) 모든 파일과 디렉터리는 여기서부터 시작한다 

/ (root)		최상위 디렉터리 			$C:
|_ /bin/ 		기본 명령어 저장소(ls, cp, mv, ..)  $C:\windows\system32
|_ /opt/ 		
|_ /boot/ 		부팅관련 파일 저장소(부트로더가 포함)	$boot.ini(부팅파일) 
|_ /root/		관리자(root) 전용 홈디렉터리 
|_ /dev/		장치파일(Device) 저장소(usb, HDD, CD-ROM 등) 
			TUI - 수동 장치 연결(mount), GUI - 자동장치 연결(PnP, Plug&Play) 
|_ /sbin/		시스템 관리자 명령어 저장소(fdisk, reboot, shutdown 등) 
|_ /etc/		시스템 설정 파일 저장소(서버관리, 네트워크 설정 등) 
|_ /src/		
|_ /home/		일반 사용자 홈 디렉터리 저장소 	 $C:\users, C:\Users\Administrator  
|_ /tmp/ 		임시 파일 저장소(기본 1000개) 
|_ /lib/		공유 라이브러리 저장소(.so 파일, C라이브러리 등) %dll(Dynamic Link Library) 
|_ /usr/		응용 프로그램 저장소(일반 소프트웨어) 
	|_ /bin/
	|_ /include/
	|_ /lib/
	|_ /sbin/ 
|_ /media/ 		자동 장치 연결 위치(usb, CD-ROM 등) 
|_ /var/		자주 변경되는 파일 저장소(로그파일, 메일, 상태메시지 등) 
	|_ /cache/
	|_ /log/
	|_ /spool/ 
	|_ /tmp/ 
|_ /mnt/ 		원격 장치(네트워크 드라이브) 연결 위치 
|_ /proc/ 		현재 실행중인 프로세스 정보 저장소(휘발성 데이터)
			kernel, 가상화, 프로그램 동작중인 모든 프로그램		
|_ swap 		가상 메모리(RAM 부족시 사용되는 공간)   

* 반드시 알아야 하는 디렉토리 
	/
	/boot 
	/bin
	/sbin
	/home
	/root
	/etc
	/dev
	/media 
	/mnt
	/usr
	/proc
	/var
	/lib
	/tmp
	/swap

11. VM WARE 설치
   https://www.broadcom.com/ 가입(구글 계정으로 가입)
   
   가입 완료 후 로그인 > 메인 페이지의 software 클릭 > VMWare Cloud Foundation > My Downloads
   > 2페이지 > VMware Workstation Pro >  17.6.2 다운로드

1) 다운로드 완료 후 vmware 설치 진행
   next
   I accept the terms int the License Agreement 체크 후 Next
   vmware 설치 경로 이동 > D:\web_0900_kys\secure\itbasic\resource 변경 후 Next
   User Experience Setting 옵션 모두 체크 해제 후 Next
      - Check for product updates on startup : 
      VMWare Workstation Pro가 업데이트 되면 자동으로 알려주는 기능
      - Join the VMware Customer Experience Improvement Program : 
      편의성 개선을 위해 사용과 관련된 정보 익명으로 보내는 기능
   Desktop, Start Menu Programs Folder  둘 다 체크 후 Next
   Install > Finish

   설치 완료 후 설치 폴더에서 vmware.exe 파일 확인

2) 록키리눅스 설치 
	https://rockylinux.org/ko_KR/download 
	v8.10으로 설치 
	
	DVD ISO : 현제 설치 이미지 제공, 록키리눅스를 설치하는데 필요한 모든 패키지가 포함되어있음 
	부팅 ISO : 운영 체제를 부팅하고 설치할 수 있는 쵯소한의 환경 제공
	네트워크를 통해 추가 패키지를 다운로드 파거나 DVD ISO 다른 설치미디어와 함꼐 사용 가능함 
	최소 ISO : 기본적인 시스템설치에 필요한 최소한의 패키지만 포함되는 ISO 파일 

	DID ISO, 부팅 ISO 다운로드 받기 















		
	




























 